(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{319:function(e,t,r){"use strict";r.r(t);var a=r(0),s=Object(a.a)({},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"성능-측정"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#성능-측정","aria-hidden":"true"}},[e._v("#")]),e._v(" 성능 측정")]),e._v(" "),r("p",[e._v("앞서 다룬 "),r("router-link",{attrs:{to:"/guidebook/tip-01.html"}},[e._v("빅 데이터 관리 성능 향상 팁")]),e._v("에서 큰 객체와 같은 데이터를 관리하는 효율적인 방법을 알아봤습니다.\n하지만 그 팁을 사용한 방법이 얼마 만큼 성능을 개선했는지 체감되진 않습니다.\n이번 팁은 Chrome 개발도구(DevTools)의 성능(performance) 탭을 사용해 성능을 측정하는 방법을 알아보는 것입니다.")],1),e._v(" "),r("h3",{attrs:{id:"테스트-준비"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#테스트-준비","aria-hidden":"true"}},[e._v("#")]),e._v(" 테스트 준비")]),e._v(" "),r("p",[e._v("정확한 성능 측정 데이터를 얻으려면 Vue 애플리케이션에서 "),r("a",{attrs:{href:"https://vuejs.org/v2/api/#performance",target:"_blank",rel:"noopener noreferrer"}},[e._v("성능(performance) 모드"),r("OutboundLink")],1),e._v("를 활성화 해야 합니다.")]),e._v(" "),r("blockquote",[r("p",[e._v("main.js")])]),e._v(" "),r("div",{staticClass:"language-js line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[e._v("Vue"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("config"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("performance "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("div",{staticClass:"tip custom-block"},[r("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),r("p",[e._v("Vue.js는 컴포넌트의 성능을 표시하기 위해 내부적으로 사용하는 "),r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/User_Timing_API",target:"_blank",rel:"noopener noreferrer"}},[e._v("User Timing API"),r("OutboundLink")],1),e._v("를 활성화 합니다.")])]),e._v(" "),r("h3",{attrs:{id:"테스트"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#테스트","aria-hidden":"true"}},[e._v("#")]),e._v(" 테스트")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://jvy4n4ymlv.codesandbox.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("성능 측정 테스트"),r("OutboundLink")],1),e._v("와 "),r("a",{attrs:{href:"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C"}},[e._v("테스트 코드")]),e._v("를 살펴보며 성능 비교를 해봅시다.\nChrome 개발도구를 열어 성능 탭을 클릭한 후, 성능 탭의\nStart profiling and reload page 버튼을 눌러 페이지를 새로고침 한 후 프로파일링을 시작합니다.\n페이지 성능 테스트 결과가 기록되면, Timings 측정 부분을 확인합니다.")]),e._v(" "),r("base-img",{staticStyle:{border:"none"},attrs:{url:"performance-01.png"}}),e._v(" "),r("br"),e._v(" "),r("h3",{attrs:{id:"측정-항목"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#측정-항목","aria-hidden":"true"}},[e._v("#")]),e._v(" 측정 항목")]),e._v(" "),r("p",[e._v("측정되는 항목은 총 3가지로 초기화, 렌더, 패치 순으로 진행됩니다.")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("항목")]),e._v(" "),r("th",[e._v("설명")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("초기화(init)")]),e._v(" "),r("td",[e._v("컴포넌트 인스턴스를 만드는 시간")])]),e._v(" "),r("tr",[r("td",[e._v("렌더(render)")]),e._v(" "),r("td",[e._v("가상 DOM 구조를 만드는 시간")])]),e._v(" "),r("tr",[r("td",[e._v("패치(fetch)")]),e._v(" "),r("td",[e._v("가상 Dom ⇒ 실제 DOM 적용 시간")])])])]),e._v(" "),r("br"),e._v(" "),r("p",[e._v("반응성 시스템을 사용하는 "),r("strong",[e._v("ReactiveTester")]),e._v(" 컴포넌트의 초기화 시간이 "),r("code",[e._v("403.00ms")]),e._v("인 반면,\n반응성 시스템을 사용하지 않고 객체를 동결(freeze) 사용한 "),r("strong",[e._v("NonReactiveTester")]),e._v(" 컴포넌트의 초기화 시간은 "),r("code",[e._v("15.36ms")]),e._v("로 성능이 대폭 향상된 것을 확인할 수 있습니다.")]),e._v(" "),r("blockquote",[r("p",[e._v("반응성 시스템의 데이터 초기화에 소요되는 시간")])]),e._v(" "),r("base-img",{staticStyle:{border:"none","max-width":"620px","margin-left":"0"},attrs:{url:"performance-02.png"}}),e._v(" "),r("br"),e._v(" "),r("blockquote",[r("p",[e._v("객체를 동결/복사한 데이터 초기화에 소요되는 시간")])]),e._v(" "),r("base-img",{staticStyle:{border:"none","max-width":"500px","margin-left":"0"},attrs:{url:"performance-03.png"}}),e._v(" "),r("br"),e._v(" "),r("div",{staticClass:"tip custom-block"},[r("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),r("p",[e._v("테스트 결과는 실행 시마다 시간이 다르게 측정되지만, 테스트에 사용된 컴포넌트 초기화 성능은 비교 확인 가능합니다.")])]),e._v(" "),r("h3",{attrs:{id:"테스트-코드"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#테스트-코드","aria-hidden":"true"}},[e._v("#")]),e._v(" 테스트 코드")]),e._v(" "),r("p",[r("strong",[e._v("App.vue")]),e._v(" 파일로 호출되어 사용되는 "),r("a",{attrs:{href:"https://codesandbox.io/s/jvy4n4ymlv?module=%2Fsrc%2Fcomponents%2FReactiveTester.vue&view=editor",target:"_blank",rel:"noopener noreferrer"}},[e._v("ReactiveTester.vue"),r("OutboundLink")],1),e._v(", "),r("a",{attrs:{href:"https://codesandbox.io/s/jvy4n4ymlv?module=%2Fsrc%2Fcomponents%2FNonReactiveTester.vue&view=editor",target:"_blank",rel:"noopener noreferrer"}},[e._v("NonReactiveTester.vue"),r("OutboundLink")],1),e._v(" 컴포넌트 코드를 살펴보세요.")]),e._v(" "),r("iframe-wrapper",{attrs:{src:"https://codesandbox.io/embed/jvy4n4ymlv?autoresize=1&hidenavigation=1&module=%2Fsrc%2FApp.vue&moduleview=1&view=editor"}})],1)},[],!1,null,null,null);t.default=s.exports}}]);